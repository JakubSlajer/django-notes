name: CI/CD
on:
  push:
    branches:
      - 'dev'
      - 'stage'
      - 'master'
      - 'feature/**'
      - 'refactoring/**'
      - 'bugfix/**'
      - 'chore/**'
    pull_request:
      - 'dev'
      - 'master'
      - 'stage'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
        db: [sqlite, postgres, mysql]
        include:
          - db: postgres
            db_port: 5432
          - db: mysql
            db_port: 3306
        # Service containers to run with `container-job`

    services:
      # postgres db
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: hunter2
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: hunter2
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: ‘2’

    - name: Install dependencies
      run:
        python -m pip install --upgrade pip
        pip install -r com/requirements.txt
    - name: Install coverage
      run:
        pip install coverage

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run Tests
      env:
        DB: ${{ matrix.db }}
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ matrix.db_port }}
        DB_PASSWORD: hunter2
      run: |
        cd com
        python manage.py test

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Generate Report
      run: |
        cd com
        python manage.py test
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        path_to_write_report: ./coverage/codecov_report.txt
